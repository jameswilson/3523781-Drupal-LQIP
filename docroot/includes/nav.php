<?php
$pages = [
  [
    'label' => 'About',
    'file' => 'index.php',
    'desc' => 'Project overview and comparison points.'
  ],
  [
    'label' => 'Baseline Lazy',
    'file' => 'baseline-lazy.php',
    'desc' => 'JPG hero image with <code>loading="lazy"</code>.'
  ],
  [
    'label' => 'Baseline Eager',
    'file' => 'baseline-eager.php',
    'desc' => 'JPG hero image with <code>loading="eager"</code>.'
  ],
  [
    'label' => 'LQIP No Blur',
    'file' => 'lqip-no-blur.php',
    'desc' => 'A two-level LQIP technique: a tiny base64 placeholder, then a display-size LQIP-LCP image at 0.055 BPP, then the full-res image.'
  ],
  [
    'label' => 'LQIP with Blur',
    'file' => 'lqip-blur.php',
    'desc' => 'A two-level LQIP technique: a tiny base64 placeholder, then a display-size LQIP-LCP image at 0.055 BPP, then the full-res image, with CSS blur on placeholder.'
  ],
  [
    'label' => 'LQIP BMP',
    'file' => 'lqip-bmp.php',
    'desc' => 'A simple LQIP technique: a tiny 8x8 BMP bitmap as a background-image, then the full-res image.'
  ],
  [
    'label' => 'LQIP PNG',
    'file' => 'lqip-png.php',
    'desc' => 'A simple LQIP technique: a tiny 8x8 PNG bitmap as a background-image, then the full-res image.'
  ],
  [
    'label' => 'LQIP WEBP',
    'file' => 'lqip-webp.php',
    'desc' => 'A simple LQIP technique: a tiny 8x8 WEBP bitmap as a background-image, then the full-res image.'
  ],
  [
    'label' => 'BlurHash',
    'file' => 'blurhash.php',
    'desc' => 'BlurHash LQIP: a BlurHash string is rendered to a canvas, then the hero image fades in on top of it.'
  ],
  [
    'label' => 'SQIP',
    'file' => 'sqip.php',
    'desc' => 'SVG placeholder generated by SQIP, swaps to full-res hero image. Attempt a padding technique to reduce LCP (doesn\'t work).'
  ],
  [
    'label' => 'CSS-only LQIP',
    'file' => 'css-lqip.php',
    'desc' => 'Pure CSS LQIP: dominant color or gradient as background, hero image fades in on top of a blurry CSS placeholder. Inspired by <a href="https://leanrada.com/notes/css-only-lqip/" target="_blank" rel="noopener">leanrada.com</a>.'
  ],
  [
    'label' => 'Credits',
    'file' => 'credits.php',
    'desc' => 'Credits and references.'
  ]
];

// Get current delay (ms) from GET param, default 0
$current_delay = isset($_GET['delay']) ? intval($_GET['delay']) : 0;
$delay_options = [0, 1000, 1500, 2000, 2500, 3000, 5000, 15000, 30000];
$delay_labels = ['0s', '1s', '1.5s', '2s', '2.5s', '3s', '5s', '15s', '30s'];

// Build current URL without delay param
function build_url_without_delay() {
  $params = $_GET;
  unset($params['delay']);
  $query = http_build_query($params);
  $base = basename($_SERVER['PHP_SELF']);
  return $base . ($query ? ('?' . $query) : '');
}
$base_url = build_url_without_delay();
?>
<header>
  <button id="nav-toggle" aria-label="Open navigation" aria-expanded="false">&#9776;</button>
  <nav id="main-nav" aria-label="Main navigation">
    <?php foreach ($pages as $page): ?>
      <?php
        $link = $page['file'];
        if ($current_delay > 0) {
          $link .= (strpos($link, '?') === false ? '?' : '&') . 'delay=' . $current_delay;
        }
      ?>
      <a href="<?= htmlspecialchars($link) ?>" <?= (isset($currentPage) && $currentPage === $page['file']) ? ' class="active"' : '' ?>><?= $page['label'] ?></a>
    <?php endforeach; ?>
  </nav>
  <form id="delay-form" method="get" action="<?= htmlspecialchars($base_url) ?>" style="margin:0;">
    <label for="delay-select" style="font-weight:normal;font-size:0.95em;">Delay:</label>
    <select name="delay" id="delay-select" onchange="this.form.submit()" style="margin-left:0.5em;">
      <?php foreach ($delay_options as $i => $val): ?>
        <option value="<?= $val ?>" <?= ($current_delay == $val) ? 'selected' : '' ?>><?= $delay_labels[$i] ?></option>
      <?php endforeach; ?>
    </select>
    <?php
    // Preserve other GET params as hidden fields
    #foreach ($_GET as $k => $v) {
    #  if ($k === 'delay') continue;
    #  echo '<input type="hidden" name="' . htmlspecialchars($k) . '" value="' . htmlspecialchars($v) . '">';
    #}
    ?>
  </form>
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    var navToggle = document.getElementById('nav-toggle');
    var mainNav = document.getElementById('main-nav');
    navToggle.addEventListener('click', function() {
      var isOpen = mainNav.classList.toggle('open');
      navToggle.setAttribute('aria-expanded', isOpen ? 'true' : 'false');
    });
  });
  </script>
</header>
